WPFACT = 1.5
Do I want to do W * 2 for the nMOS in the NAND gate?
    depends on logical effort calculations.
    How do you go from gate width to the parameters g / p / ...??
How to do paths
    Path class
        contains list of gates
        generates netlist of path
        allows setting each dangling input
        restrict first gate to min width?
        Add load to output
    Top level code
        either path test (checks logic of given path)
        or monte carlo sim
            instantiates the path and then runs the simulation lots
Build logical effort model for this tech
    See logical effort notes
Design some paths
    which paths?
        Single component paths
            can only compare simulated delay with calculated delay
            Cout = 0 -> h = 0 -> d = p
        One gate driving the same sized gate
            can only compare simulated delay with calculated delay
            This and the previous help check our p and g values for each gate, and our tau
        inversor chains of various lengths and various loads?
        Fan out of 4 FO4 - see example 1.2
            is FO4 delay known for our process?
        clock tree?
        ripple carry adder?
        ...?
    Calculate logical effort for paths
    Run monte carlo simulation for paths
Informe


Questions
    methodology?
        change all widths randomly?
        change just one width and revert to best?
            what happens if changing any one makes the path worse,
            but changing two at once makes the path better.
            Is that possible?
    Lots of tests give same result, see cadena_inversores_5_resultados.txt
        which is best?
            maybe change if Tp is the same but total width is less?
        How to compare to theoretical result?
            width B - width A?
            width B / width A?
            compare f = gh per stage to f_opt?
            Look at calculated Tp vs simulated?
    Do we just support fixed logic paths, or do we want to try and test other stuff
        buffer insertion?
        Estimated delays vs actual?
    What is the range of widths we need to look at?
        IIRC Capacitance and resistance are not entirely linear based on width
        so we have to pick a range to work in that is roughly linear
    Anything else to do?
        Compare to other methodologies? (see chapter 12.4)
